@import "variables";
@import "mixins";
@import "reset";
@import "./components/lists";
@import "./components/cards";
@import "./components/form";
@import "./components/modal";

.board-page {
  padding: 20px;
  display: flex;
  flex-direction: column;
  gap: 30px;
}

.board-content {
  display: flex;
  flex-direction: row;
  gap: 1rem;
  overflow-x: auto;
  align-items: flex-start;
}

.board-title {
  font-size: 30px;
  color: $gray-light;
  margin-bottom: 12px;
  font-weight: 700;
  width: fit-content;
}

// "use client";
// import { useSelector, useDispatch } from "react-redux";
// import { RootState } from "@/store";
// import InlineEditable from "@/components/InlineEditable";
// import {
//   addList,
//   setBoardTitle,
//   moveCard,
//   reorderLists,
// } from "@/features/boardSlice";
// import AddListForm from "@/components/forms/AddListForm";
// import { useState } from "react";
// import ListColumn from "@/components/lists/ListColumn";
// import "@/styles/main.scss";
// import {
//   DndContext,
//   MouseSensor,
//   TouchSensor,
//   useSensor,
//   useSensors,
//   DragEndEvent,
// } from "@dnd-kit/core";
// import {
//   SortableContext,
//   horizontalListSortingStrategy,
// } from "@dnd-kit/sortable";

// export default function BoardPage() {
//   const board = useSelector((s: RootState) => s.board);
//   const dispatch = useDispatch();
//   const [toggleListForm, setToggleListForm] = useState(false);
//   const [activeCard, setActiveCard] = useState<null | {
//     id: string;
//     title: string;
//     listId: string;
//   }>(null);
//   const mouseSensor = useSensor(MouseSensor, {
//     activationConstraint: { distance: 5 },
//   });
//   const touchSensor = useSensor(TouchSensor, {
//     activationConstraint: { delay: 150, tolerance: 5 },
//   });
//   const sensors = useSensors(mouseSensor, touchSensor);

//   const handleDragEnd = (event: DragEndEvent) => {
//     const { active, over } = event;
//     if (!over) return;

//     const activeId = active.id;
//     const overId = over.id;

//     if (activeId.startsWith("list-") && overId.startsWith("list-")) {
//       const oldIndex = board.lists.findIndex(
//         (i) => `list-${i.id}` === activeId
//       );
//       const newIndex = board.lists.findIndex((i) => `list-${i.id}` === overId);
//       if (oldIndex !== -1 && newIndex !== -1) {
//         dispatch(reorderLists({ from: oldIndex, to: newIndex }));
//       }
//       return;
//     }
//     if (activeId.startsWith("card-")) {
//       const activeListId = active.data.current?.listId;
//       const overListId = over.data.current?.listId;

//       if (activeId.startsWith("card-") && overId.startsWith("card-")) {
//         if (!activeListId || !overListId) return;

//         const activeList = board.lists.find((l) => l.id === activeListId);
//         const overList = board.lists.find((l) => l.id === overListId);
//         if (!activeList || !overList) return;

//         const activeIndex = activeList.cards.findIndex(
//           (c) => `card-${c.id}` === activeId
//         );
//         const overIndex = overList.cards.findIndex(
//           (c) => `card-${c.id}` === overId
//         );

//         dispatch(
//           moveCard({
//             fromListId: activeListId,
//             toListId: overListId,
//             cardId: active.id.replace("card-", ""),
//             toIndex: overIndex >= 0 ? overIndex : overList.cards.length,
//           })
//         );
//         return;
//       }

//       if (overId.startsWith("list-")) {
//         const fromListId = activeListId;
//         const toListId = overId.replace("list-", "");

//         if (!fromListId || !toListId) return;

//         dispatch(
//           moveCard({
//             fromListId,
//             toListId,
//             cardId: activeId.replace("card-", ""),
//             toIndex: 0,
//           })
//         );
//       }
//     }
//   };

//   return (
//     <div className="board-page">
//       <h1>
//         <InlineEditable
//           value={board.title}
//           onSave={(title) => dispatch(setBoardTitle(title))}
//           className="board-title"
//         />
//       </h1>

//       <DndContext
//         sensors={sensors}
//         onDragStart={(event) => {
//           if (event.active.id.toString().startsWith("card-")) {
//             const listId = event.active.data.current?.listId;
//             const list = board.lists.find((l) => l.id === listId);
//             const card = list?.cards.find(
//               (c) => `card-${c.id}` === event.active.id
//             );
//             if (card && listId) setActiveCard({ ...card, listId });
//           }
//         }}
//         onDragEnd={(event) => {
//           handleDragEnd(event);
//           setActiveCard(null);
//         }}
//         onDragCancel={() => setActiveCard(null)}
//       >
//         <SortableContext
//           items={board.lists.map((l) => `list-${l.id}`)}
//           strategy={horizontalListSortingStrategy}
//         >
//           <div className="board-content">
//             {board.lists.map((list) => (
//               <ListColumn key={list.id} list={list} />
//             ))}

//             {toggleListForm ? (
//               <AddListForm
//                 onAdd={(title) => dispatch(addList(title))}
//                 setToggleListForm={setToggleListForm}
//                 toggleListForm={toggleListForm}
//               />
//             ) : (
//               <button
//                 className="btn add"
//                 onClick={() => setToggleListForm(true)}
//               >
//                 + Add List
//               </button>
//             )}
//           </div>
//         </SortableContext>
//       </DndContext>
//     </div>
//   );
// }
